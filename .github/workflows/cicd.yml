name: Gaming Cafe CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push User App Images
      - name: Build and Push User Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-backend:latest ./gaming-cafe-user/backend
          docker push ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-backend:latest

      - name: Build and Push User Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-frontend:latest ./gaming-cafe-user
          docker push ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-frontend:latest

      # Build and Push Admin App Images
      - name: Build and Push Admin Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-backend:latest ./gaming-cafe-admin/backend
          docker push ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-backend:latest

      - name: Build and Push Admin Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-frontend:latest ./gaming-cafe-admin
          docker push ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-frontend:latest

  continuous-deployment:
    needs: continuous-integration
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Docker Rootless Environment
        run: |
          echo "Setting up Docker rootless env..."
          echo "export PATH=$HOME/bin:$PATH" >> $GITHUB_ENV
          echo "export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock" >> $GITHUB_ENV

      # Pull User App Images
      - name: Pull Latest User Backend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-backend:latest

      - name: Pull Latest User Frontend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-user-frontend:latest

      # Pull Admin App Images
      - name: Pull Latest Admin Backend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-backend:latest

      - name: Pull Latest Admin Frontend Image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/gaming-cafe-admin-frontend:latest

      # Deploy User App
      - name: Stop and Remove Old User Containers
        run: |
          cd gaming-cafe-user
          docker compose down || true
          docker system prune -f

      - name: Run New User App Containers
        run: |
          cd gaming-cafe-user
          docker compose up -d
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 5000
          NODE_ENV: development

      # Deploy Admin App
      - name: Stop and Remove Old Admin Containers
        run: |
          cd gaming-cafe-admin
          docker compose down || true
          docker system prune -f

      - name: Run New Admin App Containers
        run: |
          cd gaming-cafe-admin
          docker compose up -d
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          PORT: 5001
          ADMIN_PORT: 5001
          NODE_ENV: development
          DEFAULT_ADMIN_USERNAME: ${{ secrets.DEFAULT_ADMIN_USERNAME }}
          DEFAULT_ADMIN_EMAIL: ${{ secrets.DEFAULT_ADMIN_EMAIL }}
          DEFAULT_ADMIN_PASSWORD: ${{ secrets.DEFAULT_ADMIN_PASSWORD }}
          DEFAULT_ADMIN_FULLNAME: ${{ secrets.DEFAULT_ADMIN_FULLNAME }}